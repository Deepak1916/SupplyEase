version: 0.2

phases:
  install:
    commands:
      - echo "Installing SonarQube Scanner..."
      # Download and install SonarQube Scanner
      - curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner.zip -d /opt/
      - export PATH=/opt/sonar-scanner-4.7.0.2747-linux/bin:$PATH
      - echo "SonarQube Scanner installed successfully"
      # Verify Java installation (required by SonarQube Scanner)
      - java -version || sudo yum install -y java-11-openjdk
      - echo "Java setup complete"
      - export SONAR_SCANNER_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED"
      - echo "Installing Python and dependencies"
      - pip install pytest 
      - pip install pytest-cov  # Install pytest and coverage plugin

  pre_build:
    commands:
      - echo "Starting pre-build phase"
      - echo "Verifying environment variables"
      # Print environment variables for debugging (optional, remove if sensitive)
      #- echo "SONAR_HOST_URL=$SONAR_HOST_URL"
      - echo "SONAR_TOKEN=$SONAR_TOKEN"
      - echo "Environment setup complete"
      #- echo "Running tests and generating coverage report"
      - export PYTHONPATH=$PYTHONPATH:/codebuild/output/*/src
      - pytest tests/ --cov=. --cov-report=xml  # Run tests and generate coverage report

  build:
    commands:
      - echo "Running SonarQube analysis for application"
      - sonar-scanner -Dsonar.projectKey=devops -Dsonar.sources=. -Dsonar.tests=tests -Dsonar.host.url=http://3.237.53.141:9000/ -Dsonar.login=$SONAR_TOKEN -Dsonar.python.coverage.reportPaths=coverage.xml

artifacts:
  files:
    - '**/*'
  discard-paths: yes
